AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Assign3 Demo
Parameters:
  FrontGitHubRepo:
    Type: String

  LambdaGitHubRepo:
    Type: String

  GitHubBranch:
    Type: String

  GitHubToken:
    Type: String

  GitHubUser:
    Type: String


Resources:
  FrontS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: assign3front
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
    DeletionPolicy: Retain

  LambdaDeployementS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: assign3lambda
      AccessControl: PublicRead
    DeletionPolicy: Retain
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PutBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref FrontS3Bucket
                - /*
      Bucket: !Ref FrontS3Bucket

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "codepipeline.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: code-pipeline-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${FrontS3Bucket}/*
                  - !Sub arn:aws:s3:::${FrontS3Bucket}
                  - !Sub arn:aws:s3:::${LambdaDeployementS3Bucket}/*
                  - !Sub arn:aws:s3:::${LambdaDeployementS3Bucket}
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:ListObjects
              - Resource:
                  - arn:aws:s3:::*
                Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
              - Resource: "*"
                Effect: Allow
                Action:
                  - lambda:*

  FrontPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref FrontS3Bucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref FrontGitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: FrontDeployStep
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName: !Ref FrontS3Bucket
                Extract: true
                ObjectKey: page
              InputArtifacts:
                - Name: App
              RunOrder: 1

  LambdaPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaDeployementS3Bucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref LambdaGitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: LambdaDeployStep
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName: !Ref LambdaDeployementS3Bucket
                Extract: true
                ObjectKey: function
              InputArtifacts:
                - Name: App
              RunOrder: 1

  Lambda:
    Type: AWS::Serverless::Function
    DependsOn: 
      - LambdaPipeline
      - LambdaDeployementS3Bucket
    Properties:
      Environment:
        Variables:
          REGION: us-east-1
      CodeUri: s3://assign3lambda/function/Assign3-LF1.zip  
      Description: Lambda function for FrontEnd 
      MemorySize: 128   

      Handler: lambda_function.lambda_handler
      Role: arn:aws:iam::186209955484:role/service-role/LFTEST-role-onewv07z
      Timeout: 30
      Runtime: python3.8
      FunctionName: testLF

  Lambda2:
    Type: AWS::Serverless::Function
    DependsOn: 
      - LambdaPipeline
      - LambdaDeployementS3Bucket
    Properties:
      Environment:
        Variables:
          REGION: us-east-1
      CodeUri: s3://assign3lambda/function/Assign3-LF2.zip 
      Description: Lambda function for CD Demo  
      MemorySize: 128   

      Handler: lambda_function.lambda_handler
      Role: arn:aws:iam::186209955484:role/service-role/LFTEST-role-onewv07z
      Timeout: 30
      Runtime: python3.8
      FunctionName: testLF2



Outputs:
  WebsiteURL:
    Value: !Join
    - ''
    - - !GetAtt 
        - FrontS3Bucket
        - WebsiteURL
      - '/page'
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - FrontS3Bucket
          - DomainName
    Description: Name of S3 bucket to hold website content